---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  schemas:
    Coach:
      type: object
      additionalProperties: false
      required:
      - id
      - name
      - slots
      properties:
        id:
          type: integer
        name:
          type: string
        slots:
          type: array
          items:
            "$ref": "#/components/schemas/Slot"
    Slot:
      type: object
      additionalProperties: false
      required:
      - id
      - start
      - end
      properties:
        id:
          type: integer
        title:
          type: string
        phone:
          type: string
        start:
          type: string
        end:
          type: string
    Student:
      type: object
      additionalProperties: false
      required:
      - id
      - name
      - slots
      properties:
        id:
          type: integer
        name:
          type: string
        slots:
          type: array
          items:
            "$ref": "#/components/schemas/Slot"
paths:
  "/coaches/{coach_id}/slots":
    get:
      summary: list coach slots
      tags:
      - Slots
      operationId: listCoachSlots
      parameters:
      - name: coach_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Slot"
    post:
      summary: create coach slot
      tags:
      - Slots
      operationId: createCoachSlot
      parameters:
      - name: coach_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    "$ref": "#/components/schemas/Slot"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                slot:
                  type: object
                  properties:
                    start:
                      type: string
                  required:
                  - start
              required:
              - slot
        required: true
  "/coaches":
    get:
      summary: list coaches
      tags:
      - Coaches
      operationId: listCoaches
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Coach"
  "/students/{student_id}/slots":
    get:
      summary: list student slots
      tags:
      - Slots
      operationId: listStudentSlots
      parameters:
      - name: student_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Slot"
  "/students/{student_id}/slots/{slot_id}":
    put:
      summary: join slot
      tags:
      - Slots
      operationId: joinSlot
      parameters:
      - name: student_id
        in: path
        required: true
        schema:
          type: string
      - name: slot_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    "$ref": "#/components/schemas/Slot"
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
